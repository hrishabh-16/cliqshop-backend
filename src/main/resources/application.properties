# ===============================
# General Application Properties
# ===============================
spring.application.name=CliQShop-backend
server.port=9000

# ===============================
# Database Configuration (MySQL)
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/clickshop?useSSL=false
spring.datasource.username=root
spring.datasource.password=12345

#HIBERNATE-JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

##OAUTH2
spring.security.oauth2.client.registration.google.client-id=319226536009-oe4ajt4883l6vban38kq8lpns2nf66rt.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9000/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google	
.spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
logging.level.org.springframework.security=DEBUG

# ===============================
# Caching Configuration
# ===============================
spring.cache.type=simple 






# ===============================
# Mail Configuration (for OTP Emails)
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=hrishabhgautam480@gmail.com
spring.mail.password=Hrishi@2048Gautam
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# Security & JWT Configuration
# ===============================
jwt.secret-key=5ec5ae75ad5d9e07e3b3e21c362fa42e3fb5300c9eb73018ab41bc8293a211b1e70fc7840c03f92e7e78ec6206bae7b7f7caba3adcb94bd929f05a053c842e66d0fb9fbcd0c77ed875d4a0f125802586b8ae8bd1b529ee798811f15e2e86e48761b7d057877f3af6391baf8f655ade56898f4a6fa368d2e78b66fdb5e30d5734ef0135b254c5f8d1c4e1b0d0863bc16db7d5c4e73bf326d1c8a73ea98329b462c1cd3bbe0445c12e1d8c9a8748bf590650619fcbe6b23dd352d417509e9d45ac0459238d9977a05cb4a6c713991641ebf8718b7e86cec2529eb9d40e1bb50203954521cec223c22689f7cb08d81612b937517d327f2b5cff339399f49998763b  
# Replace with a secure key


jwt.expiration-time=3600000
# Token expiration time in milliseconds (1 hour)
spring.main.allow-circular-references=true




# ===============================
# WebSocket Configuration (Optional)
# ===============================
websocket.endpoint=/ws  
# WebSocket endpoint for real-time updates

#=========================
#Stripe Configuration
#===================
stripe.api.secretKey=sk_test_51PX0GoEwavEcfWl11e0Jii9c52DJ5LPrZxx984EBsL4t9rkhnOHEpTkXrJX79mTosVH2g9JZ8l6Bqg8hMcYmuhtC001vDz9z9H
stripe.api.publishableKey=pk_test_51PX0GoEwavEcfWl1BeMUetVJmMx0uwoVCSInMUu8OJxFf2fXgZppwfG9scwfE6Ra9QRJu1lnTCq56FNc7ZgkXVB000nmnzVM1E
stripe.webhook.secret=whsec_7bbe2a6021a3a6d6238be21075175d168fc948306384a18230a290b1b296cc29
#DEBUG 
logging.level.org.springframework.web=DEBUG
